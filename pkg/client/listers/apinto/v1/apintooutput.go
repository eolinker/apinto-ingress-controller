/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/eolinker/apinto-ingress-controller/pkg/apis/apinto/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ApintoOutputLister helps list ApintoOutputs.
// All objects returned here must be treated as read-only.
type ApintoOutputLister interface {
	// List lists all ApintoOutputs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ApintoOutput, err error)
	// ApintoOutputs returns an object that can list and get ApintoOutputs.
	ApintoOutputs(namespace string) ApintoOutputNamespaceLister
	ApintoOutputListerExpansion
}

// apintoOutputLister implements the ApintoOutputLister interface.
type apintoOutputLister struct {
	indexer cache.Indexer
}

// NewApintoOutputLister returns a new ApintoOutputLister.
func NewApintoOutputLister(indexer cache.Indexer) ApintoOutputLister {
	return &apintoOutputLister{indexer: indexer}
}

// List lists all ApintoOutputs in the indexer.
func (s *apintoOutputLister) List(selector labels.Selector) (ret []*v1.ApintoOutput, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ApintoOutput))
	})
	return ret, err
}

// ApintoOutputs returns an object that can list and get ApintoOutputs.
func (s *apintoOutputLister) ApintoOutputs(namespace string) ApintoOutputNamespaceLister {
	return apintoOutputNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ApintoOutputNamespaceLister helps list and get ApintoOutputs.
// All objects returned here must be treated as read-only.
type ApintoOutputNamespaceLister interface {
	// List lists all ApintoOutputs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ApintoOutput, err error)
	// Get retrieves the ApintoOutput from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ApintoOutput, error)
	ApintoOutputNamespaceListerExpansion
}

// apintoOutputNamespaceLister implements the ApintoOutputNamespaceLister
// interface.
type apintoOutputNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ApintoOutputs in the indexer for a given namespace.
func (s apintoOutputNamespaceLister) List(selector labels.Selector) (ret []*v1.ApintoOutput, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ApintoOutput))
	})
	return ret, err
}

// Get retrieves the ApintoOutput from the indexer for a given namespace and name.
func (s apintoOutputNamespaceLister) Get(name string) (*v1.ApintoOutput, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("apintooutput"), name)
	}
	return obj.(*v1.ApintoOutput), nil
}
