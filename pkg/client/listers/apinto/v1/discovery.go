/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/eolinker/apinto-ingress-controller/pkg/apis/apinto/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DiscoveryLister helps list Discoveries.
// All objects returned here must be treated as read-only.
type DiscoveryLister interface {
	// List lists all Discoveries in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Discovery, err error)
	// Discoveries returns an object that can list and get Discoveries.
	Discoveries(namespace string) DiscoveryNamespaceLister
	DiscoveryListerExpansion
}

// discoveryLister implements the DiscoveryLister interface.
type discoveryLister struct {
	indexer cache.Indexer
}

// NewDiscoveryLister returns a new DiscoveryLister.
func NewDiscoveryLister(indexer cache.Indexer) DiscoveryLister {
	return &discoveryLister{indexer: indexer}
}

// List lists all Discoveries in the indexer.
func (s *discoveryLister) List(selector labels.Selector) (ret []*v1.Discovery, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Discovery))
	})
	return ret, err
}

// Discoveries returns an object that can list and get Discoveries.
func (s *discoveryLister) Discoveries(namespace string) DiscoveryNamespaceLister {
	return discoveryNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DiscoveryNamespaceLister helps list and get Discoveries.
// All objects returned here must be treated as read-only.
type DiscoveryNamespaceLister interface {
	// List lists all Discoveries in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Discovery, err error)
	// Get retrieves the Discovery from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Discovery, error)
	DiscoveryNamespaceListerExpansion
}

// discoveryNamespaceLister implements the DiscoveryNamespaceLister
// interface.
type discoveryNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Discoveries in the indexer for a given namespace.
func (s discoveryNamespaceLister) List(selector labels.Selector) (ret []*v1.Discovery, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Discovery))
	})
	return ret, err
}

// Get retrieves the Discovery from the indexer for a given namespace and name.
func (s discoveryNamespaceLister) Get(name string) (*v1.Discovery, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("discovery"), name)
	}
	return obj.(*v1.Discovery), nil
}
