/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/eolinker/apinto-ingress-controller/pkg/apis/apinto/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// OutputLister helps list Outputs.
// All objects returned here must be treated as read-only.
type OutputLister interface {
	// List lists all Outputs in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Output, err error)
	// Outputs returns an object that can list and get Outputs.
	Outputs(namespace string) OutputNamespaceLister
	OutputListerExpansion
}

// outputLister implements the OutputLister interface.
type outputLister struct {
	indexer cache.Indexer
}

// NewOutputLister returns a new OutputLister.
func NewOutputLister(indexer cache.Indexer) OutputLister {
	return &outputLister{indexer: indexer}
}

// List lists all Outputs in the indexer.
func (s *outputLister) List(selector labels.Selector) (ret []*v1.Output, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Output))
	})
	return ret, err
}

// Outputs returns an object that can list and get Outputs.
func (s *outputLister) Outputs(namespace string) OutputNamespaceLister {
	return outputNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// OutputNamespaceLister helps list and get Outputs.
// All objects returned here must be treated as read-only.
type OutputNamespaceLister interface {
	// List lists all Outputs in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.Output, err error)
	// Get retrieves the Output from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.Output, error)
	OutputNamespaceListerExpansion
}

// outputNamespaceLister implements the OutputNamespaceLister
// interface.
type outputNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all Outputs in the indexer for a given namespace.
func (s outputNamespaceLister) List(selector labels.Selector) (ret []*v1.Output, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.Output))
	})
	return ret, err
}

// Get retrieves the Output from the indexer for a given namespace and name.
func (s outputNamespaceLister) Get(name string) (*v1.Output, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("output"), name)
	}
	return obj.(*v1.Output), nil
}
